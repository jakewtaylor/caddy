!function(t,s){"object"==typeof exports&&"undefined"!=typeof module?s(exports):"function"==typeof define&&define.amd?define(["exports"],s):s(t.caddyjs={})}(this,function(t){window.CADDY_INSTANCE_COUNT=window.CADDY_INSTANCE_COUNT||0;var s=function(t){this.options=this.buildOptions(t),this.key=this.options.key||"caddy"+ ++window.CADDY_INSTANCE_COUNT;var s=this.options.driver.getItem(this.key);this.store=s?JSON.parse(s):{},this.subscribers=[],this.listeners={}};s.prototype.buildOptions=function(t){return Object.assign({},{key:null,driver:window.localStorage},t)},s.prototype.persistStore=function(){var t=this.options.driver;this.prevStore=JSON.parse(t.getItem(this.key))||{},t.setItem(this.key,JSON.stringify(this.store)),this.notifySubscribers(),this.notifyListeners()},s.prototype.notifySubscribers=function(){var t=this;this.subscribers.forEach(function(s){s(t.store)})},s.prototype.notifyListeners=function(){var t=this,s=Object.keys(this.prevStore);Object.keys(this.store).forEach(function(e){s.includes(e)&&t.prevStore[e]===t.store[e]||(t.listeners[e]||[]).forEach(function(s){s(t.store[e])})})},s.prototype.set=function(t,s){return this.store[t]=s,this.persistStore(),this},s.prototype.get=function(t){return this.store[t]},s.prototype.has=function(t){return Object.prototype.hasOwnProperty.call(this.store,t)},s.prototype.flush=function(){return this.store={},this.persistStore(),this},s.prototype.push=function(t,s){if(!this.has(t))return this.set(t,[s]);if(!Array.isArray(this.get(t)))throw new Error("Failed trying to push to non-array.");return this.store[t].push(s),this.persistStore(),this},s.prototype.subscribe=function(t){return this.subscribers.push(t),this},s.prototype.listen=function(t,s){return this.listeners[t]||(this.listeners[t]=[]),this.listeners[t].push(s),this},t.Caddy=s});
//# sourceMappingURL=caddy.umd.js.map
